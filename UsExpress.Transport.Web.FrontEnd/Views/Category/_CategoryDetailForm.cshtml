@model UsExpress.Transport.Lib.Business.Models.DBContext.UsTransport.tblCategory

@{ 
    bool IsUpdate = false;
    int intCategory = 1;
    if (Model != null && Model.id > 0)
    {
        IsUpdate = true;
        int intTemp = 0;
        intCategory = int.TryParse(Model.TypeCategoryID.ToString(), out intTemp) ? int.Parse(Model.TypeCategoryID.ToString()) : 1;
    }
}
<h3>Add New Catelogy</h3>
@using (Ajax.BeginForm("InsertUpdateCategory", "Category", new AjaxOptions
{
    HttpMethod = "POST",
    OnSuccess = "OnSuccess"
}, new { @id = "frm_create_catelogy" }))
{
    @*<div>
            <input name="CategoryName" class="form-control mb20" placeholder="Catelogies" value="@Mo" />
            <input name="Code" class="form-control mb20" placeholder="Code" />
        </div>*@
    if (IsUpdate)
    {
        <input id="hCatelogyID" name="id" type="hidden" value="@Model.id" />
    }
    <div>
        @Html.TextBoxFor(x => x.CategoryName, new { @class = "form-control mb20", @placeholder = "Categories" })
        @Html.TextBoxFor(x => x.Code, new { @class = "form-control mb20", @placeholder = "Code" })
        <select name="TypeCategoryID" class="form-control mb20">
            <option value="1" @(intCategory == 1 ? "selected" : "")>Normal</option>
            <option value="2" @(intCategory == 2 ? "selected" : "")>Flammable</option>
        </select>
    </div>

    <button type="submit" class="btn btn-default">@Html.Raw(IsUpdate ? "Update" : "Add New")</button>
    if (IsUpdate)
    {
        <label for="btnCancel" class="btn btn-default">Cancel</label>
    }

}
@using (Ajax.BeginForm("AJXUpdateForm", "Category", new AjaxOptions
{
    HttpMethod = "POST",
    OnSuccess = "ReloadValidate",
    UpdateTargetId = "divUpdate"
}))
{
    <button id="btnCancel" type="submit" class="btn btn-default" style="visibility: hidden;">Cancel</button>
}



