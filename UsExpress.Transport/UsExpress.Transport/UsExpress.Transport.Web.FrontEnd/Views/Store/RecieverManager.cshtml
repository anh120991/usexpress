@model UsExpress.Transport.Lib.Business.Models.DBContext.UsTransport.tblRecipientsInfo
@{
    ViewBag.Title = "RecieverManager";
}

@{
    bool IsUpdate = Model != null && Model.id > 0 ? true : false;
    int CityID = -1;
    if (IsUpdate)
    {
        CityID = int.Parse(Model.CityId.ToString());
    }
}

<style>
    .form_cms {
        max-width: 500px;
        margin: 0 auto;
    }
</style>
<div class="cms_nav">
    <div class="container">
        <div class="left">ORDER #:</div>
        <div class="right">07/13/2018</div>
    </div>
</div>
<div class="container">
    <div class="mt30 mb40">
        @using (Ajax.BeginForm("UpdateReciever", "Store", new AjaxOptions
        {
            HttpMethod = "POST",
            OnSuccess = "OnSuccess"
        }, new { @class = "form_cms", @id = "frm_create_reciver" }))
        {
            <input type="hidden" name="StoreId" value="@ViewBag.StoreID" />
            if (IsUpdate)
            {
                <input type="hidden" name="id" value="@Model.id" />
            }
                <h2>Recipients manager</h2>
            <div class="warp">
                <div class="form-group width-100">
                    @Html.TextBoxFor(x => x.FullName, new { @class = "form-control", @placeholder = "Full name" })
                    <i class="fas fa-user"></i>
                </div>

                <div class="form-group width-100">
                    @Html.TextBoxFor(x => x.Add1, new { @class = "form-control", @placeholder = "Address 1" })
                    <i class="fas fa-map-marker-alt"></i>
                </div>
                <div class="form-group width-100">
                    @Html.TextBoxFor(x => x.Add2, new { @class = "form-control", @placeholder = "Address 2" })
                    <i class="fas fa-map-marker-alt"></i>
                </div>
                <div class="form-group width-100">
                    <select id="CityId" name="CityId" class="form-control" style="width: 60%;display: inline-block;">

                        @Html.Action("_HtmlSelectBoxCity", "Common", new { Selected = CityID })
                    </select>
                    <i class="fa fa-university"><img src="images/icons/city.png" alt=""></i>
                </div>
                <div class="form-group width-100">
                    @Html.TextBoxFor(x => x.Phone, new { @class = "form-control", @placeholder = "Phone number" })
                    <i class="fas fa-mobile-alt"></i>
                </div>
                <div class="form-group width-100 btn_bottom">
                    @if (IsUpdate)
                    {
                        <button type="submit" class="btn btn-default">Update</button>
                    }
                    else
                    {
                        <button type="submit" class="btn btn-default">Insert</button>
                        <button type="button" onclick="Store.ResetForm('#frm_create_sender')" class="btn btn-default">Reset</button>
                    }

                </div>

            </div>
        }
    </div>
</div>

@section Scripts {

    <script src="~/scripts/object-prototype/store.js"></script>
    <script>
        Store.ValidateFormReciver();
        function OnSuccess(avg) {
            Store.UpdateSenderSuccess(avg);
        }
    </script>
}


